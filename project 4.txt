 ************ Blockchain ID validation routine ************ 


Web API POST endpoint to validate request with JSON response.

S-1.	Use the URL for the endpoint: http://localhost:8000/requestValidation
S-2.	The response should contain: walletAddress, requestTimeStamp, message and validationWindow.
S-3.	The request must configure a limited validation window of five minutes.	
S-4.	When re-submitting within validation window, window should reduce to expires.	

Web API POST endpoint validates message signature with JSON response.

S-5.	Use the URL for the endpoint: http://localhost:8000/message-signature/validate
S-6.	Verify that the time window of 5 minutes didn't expired.
	Upon validation, the user is granted access to register a single star.
S-7.	The endpoint response should look like	
	

 ************ Star registration Endpoint ************ 

Web API POST endpoint with JSON response that submits the Star information to be saved in the Blockchain.

S-8.	Use the Url for the endpoint: http://localhost:8000/block	
S-9.	The Star object and properties are stored in body block of your Blockchain Dataset.
S-10.	Verify that the "address" that send the Star was validated in the previous steps or error.
S-11.	The response will look like


 ************ Star Lookup ************ 

Get Star block by hash with JSON response.

S-12.	Use the URL:http://localhost:8000/stars/hash:[HASH]
S-13.	The response includes entire star block contents and story decoded to ASCII.



Get Star block by wallet address (blockchain identity) with JSON response.

S-14.	Use the URL:http://localhost:8000/stars/address:[ADDRESS]
S-15.	The response includes entire star block contents and story decoded to ASCII.

S-16.	response contained a list of Stars of one wallet address for multiple Stars.
<-------------OK
Get star block by star block height with JSON response.

S-17.	Use the URL:http://localhost:8000/block/[HEIGHT]
S-18.	The response includes entire star block contents along with the addition of star 	story decoded to ASCII.













Here is an example of how star coordinates are represented:

RA 13h 03m 33.35sec, Dec -49° 31’ 38.1” Mag 4.83 Cen

RA 9h 54m 26sec, Dec 69° 27’ 1.2” 
Mag 4.83 
Cen


RA = Right Ascension

DEC = Declination

CEN = Centaurus

MAG = Magnitude

limiting brightness of stars seen with the naked eye is about magnitude 6.5
With binoculars, you can see to magnitudes of about 10 Cen

===============================================================

- (I) User makes a request to submit a star and sends his/her address. (I)

 
1-not to submit the same address

"address":"1Kc8NccSW4qieURf2AjikTzs99vq1oBerc"

 curl -X POST \
                http://localhost:8000/requestValidation \
                -H 'Content-Type: application/json' \
                -H 'cache-control: no-cache' \
                -d '{ "address":"1Kc8NccSW4qieURf2AjikTzs99vq1oBerc" }'
                

 
===============================================================

- (O)API responds with a message that the user should sign with its private keys.
  
{  
   "walletAddress":"1Kc8NccSW4qieURf2AjikTzs99vq1oBerc",
   "requestTimeStamp":"1544766868",
   "message":"1Kc8NccSW4qieURf2AjikTzs99vq1oBerc:1544766868:starRegistry",
   "validationWindow":291,
   "mempoolStatus":"Valid"
}

 


===============================================================

- (I) User signs the message and sends it to the service.
private key?

"signature":"IKQR7cn7bOGcHKM7tjCmLlZfLwDYwWdhNjaI7niyY9KJLmsakZ3l9Egent4+aJt7Nqv6l+9340UWXRHhqqAQ1+U="

curl -X POST \
            http://localhost:8000/message-signature/validate \
            -H 'Content-Type: application/json' \
            -H 'cache-control: no-cache' \
            -d '{
                "address":"1Kc8NccSW4qieURf2AjikTzs99vq1oBerc",
                "signature":"IKQR7cn7bOGcHKM7tjCmLlZfLwDYwWdhNjaI7niyY9KJLmsakZ3l9Egent4+aJt7Nqv6l+9340UWXRHhqqAQ1+U="
            }'



===============================================================

- (O)Service checks if signature is valid. Inform the user of the result.

2-keep address for 5 min only
{  
   "registerStar":true,
   "status":{  
      "address":"1Kc8NccSW4qieURf2AjikTzs99vq1oBerc",
      "requestTimeStamp":"1544766868",
      "message":"1Kc8NccSW4qieURf2AjikTzs99vq1oBerc:1544766868:starRegistry",
      "validationWindow":291,
      "messageSignature":true
   }
}

===============================================================

- (I)If signature is valid, user is able to submit a star.

curl -X POST \
                http://localhost:8000/block \
                -H 'Content-Type: application/json' \
                -H 'cache-control: no-cache' \
                -d '{
                "address": "1Kc8NccSW4qieURf2AjikTzs99vq1oBerc",
                "star": {
                        "dec": "69° 27'\'' 1.2",
                        "ra": "9h 54m 26s",
                        "story": "Found star using https://www.google.com/sky/"
                    }
            	    }'



- (O)After submitting a star, the same user has to restart all the process to be able to submit another star. 
{  
   "hash":"8a7776a2e7e0973c3d8a5b2e4ea7b143243fa2f5e2b1e5a15129dfa0d7b789e1",
   "height":8,
   "body":{  
      "address":"1Kc8NccSW4qieURf2AjikTzs99vq1oBerc",
      "star":{  
         "dec":"69° 27' 1.2",
         "ra":"9h 54m 26s",
         "story":"466f756e642073746172207573696e672068747470733a2f2f7777772e676f6f676c652e636f6d2f736b792f",
         "storyDecoded":"Found star using https://www.google.com/sky/"
      }
   },
   "time":"1544809720",
   "previousBlockHash":"6bf6374522a1721b150126bc2b7f0a015cdb8ad068cf9cc1c38ab5bb605271da"
}


-(I) Use the URL:http://localhost:8000/stars/hash:[HASH]
curl "http://localhost:8000/stars/c867b695e3284e8c88c6bc7cbe3805a1c17c1f6f296eb11ac19d4c3d1af70d64"

-(O) The response includes entire star block contents and story decoded to ASCII
{
    "hash": "c867b695e3284e8c88c6bc7cbe3805a1c17c1f6f296eb11ac19d4c3d1af70d64",
    "height": 1,
    "body": {
        "address": "1Kc8NccSW4qieURf2AjikTzs99vq1oBerc",
        "star": {
            "dec": "69° 27' 1.2",
            "ra": "9h 54m 26s",
            "story": "466f756e642073746172207573696e672068747470733a2f2f7777772e676f6f676c652e636f6d2f736b792f",
            "storyDecoded": "Found star using https://www.google.com/sky/"
        }
    },
    "time": "1544993113",
    "previousBlockHash": "d58a0de0b707ae8d472859fa08fa0f87cf02394865eedad53b68fe5bec9254d4"
}